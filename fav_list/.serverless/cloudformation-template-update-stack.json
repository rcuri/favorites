{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "SignUnderscoreupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/favorites-dev-sign_up"
      }
    },
    "CreateUnderscorelistLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/favorites-dev-create_list"
      }
    },
    "UpdateUnderscorelistUnderscoremetadataLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/favorites-dev-update_list_metadata"
      }
    },
    "UpdateUnderscorelistUnderscorecontentsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/favorites-dev-update_list_contents"
      }
    },
    "GetUnderscorelistUnderscorebyUnderscorelistUnderscoreidLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/favorites-dev-get_list_by_list_id"
      }
    },
    "ListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/favorites-dev-list_all_lists_per_user"
      }
    },
    "ListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreidLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/favorites-dev-list_all_history_per_list_id"
      }
    },
    "GetUnderscoreuserUnderscorebyUnderscoreemailLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/favorites-dev-get_user_by_email"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "favorites",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/favorites-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/favorites-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:Query",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "FavoritesDynamoDBTable",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "favorites",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "SignUnderscoreupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/favorites/dev/1660287301124-2022-08-12T06:55:01.124Z/favorites.zip"
        },
        "Handler": "src/functions/sign_up/handler.handler",
        "Runtime": "python3.8",
        "FunctionName": "favorites-dev-sign_up",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FAVORITES_TABLE_NAME": "dev-favorites-favorites-table",
            "USERS_HTTP_API_URL": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SignUnderscoreupLogGroup"
      ]
    },
    "CreateUnderscorelistLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/favorites/dev/1660287301124-2022-08-12T06:55:01.124Z/favorites.zip"
        },
        "Handler": "src/functions/create_list/handler.handler",
        "Runtime": "python3.8",
        "FunctionName": "favorites-dev-create_list",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FAVORITES_TABLE_NAME": "dev-favorites-favorites-table",
            "USERS_HTTP_API_URL": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateUnderscorelistLogGroup"
      ]
    },
    "UpdateUnderscorelistUnderscoremetadataLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/favorites/dev/1660287301124-2022-08-12T06:55:01.124Z/favorites.zip"
        },
        "Handler": "src/functions/update_list_metadata/handler.handler",
        "Runtime": "python3.8",
        "FunctionName": "favorites-dev-update_list_metadata",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FAVORITES_TABLE_NAME": "dev-favorites-favorites-table",
            "USERS_HTTP_API_URL": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UpdateUnderscorelistUnderscoremetadataLogGroup"
      ]
    },
    "UpdateUnderscorelistUnderscorecontentsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/favorites/dev/1660287301124-2022-08-12T06:55:01.124Z/favorites.zip"
        },
        "Handler": "src/functions/update_list_contents/handler.handler",
        "Runtime": "python3.8",
        "FunctionName": "favorites-dev-update_list_contents",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FAVORITES_TABLE_NAME": "dev-favorites-favorites-table",
            "USERS_HTTP_API_URL": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UpdateUnderscorelistUnderscorecontentsLogGroup"
      ]
    },
    "GetUnderscorelistUnderscorebyUnderscorelistUnderscoreidLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/favorites/dev/1660287301124-2022-08-12T06:55:01.124Z/favorites.zip"
        },
        "Handler": "src/functions/get_list/handler.handler",
        "Runtime": "python3.8",
        "FunctionName": "favorites-dev-get_list_by_list_id",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FAVORITES_TABLE_NAME": "dev-favorites-favorites-table",
            "USERS_HTTP_API_URL": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscorelistUnderscorebyUnderscorelistUnderscoreidLogGroup"
      ]
    },
    "ListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/favorites/dev/1660287301124-2022-08-12T06:55:01.124Z/favorites.zip"
        },
        "Handler": "src/functions/get_user_lists/handler.handler",
        "Runtime": "python3.8",
        "FunctionName": "favorites-dev-list_all_lists_per_user",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FAVORITES_TABLE_NAME": "dev-favorites-favorites-table",
            "USERS_HTTP_API_URL": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuserLogGroup"
      ]
    },
    "ListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreidLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/favorites/dev/1660287301124-2022-08-12T06:55:01.124Z/favorites.zip"
        },
        "Handler": "src/handlers/list_all_history_per_list_id.handler",
        "Runtime": "python3.8",
        "FunctionName": "favorites-dev-list_all_history_per_list_id",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FAVORITES_TABLE_NAME": "dev-favorites-favorites-table",
            "USERS_HTTP_API_URL": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreidLogGroup"
      ]
    },
    "GetUnderscoreuserUnderscorebyUnderscoreemailLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/favorites/dev/1660287301124-2022-08-12T06:55:01.124Z/favorites.zip"
        },
        "Handler": "src/handlers/get_user_by_email.handler",
        "Runtime": "python3.8",
        "FunctionName": "favorites-dev-get_user_by_email",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FAVORITES_TABLE_NAME": "dev-favorites-favorites-table",
            "USERS_HTTP_API_URL": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscoreuserUnderscorebyUnderscoreemailLogGroup"
      ]
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-favorites",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "HttpApiAuthorizerServiceAuthorizer": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "Name": "serviceAuthorizer",
        "IdentitySource": [
          "$request.header.Authorization"
        ],
        "AuthorizerType": "JWT",
        "JwtConfiguration": {
          "Audience": [
            "7bgfdaimk6kh7v50rjmfnkj2ui"
          ],
          "Issuer": "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_5SxzG8QmZ"
        }
      }
    },
    "SignUnderscoreupLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SignUnderscoreupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationSignUnderscoreup": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "SignUnderscoreupLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostUsers": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /users",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationSignUnderscoreup"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationSignUnderscoreup"
    },
    "CreateUnderscorelistLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateUnderscorelistLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCreateUnderscorelist": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateUnderscorelistLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostLists": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /lists",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCreateUnderscorelist"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerServiceAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationCreateUnderscorelist"
    },
    "UpdateUnderscorelistUnderscoremetadataLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateUnderscorelistUnderscoremetadataLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateUnderscorelistUnderscoremetadata": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateUnderscorelistUnderscoremetadataLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePutListsListidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /lists/{list_id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateUnderscorelistUnderscoremetadata"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerServiceAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateUnderscorelistUnderscoremetadata"
    },
    "UpdateUnderscorelistUnderscorecontentsLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateUnderscorelistUnderscorecontentsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateUnderscorelistUnderscorecontents": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateUnderscorelistUnderscorecontentsLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostListsListidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /lists/{list_id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateUnderscorelistUnderscorecontents"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerServiceAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateUnderscorelistUnderscorecontents"
    },
    "GetUnderscorelistUnderscorebyUnderscorelistUnderscoreidLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscorelistUnderscorebyUnderscorelistUnderscoreidLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscorelistUnderscorebyUnderscorelistUnderscoreid": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscorelistUnderscorebyUnderscorelistUnderscoreidLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGetListsListidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /lists/{list_id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscorelistUnderscorebyUnderscorelistUnderscoreid"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerServiceAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscorelistUnderscorebyUnderscorelistUnderscoreid"
    },
    "ListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuserLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuserLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuser": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "ListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuserLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGetUsersEmailVarLists": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /users/{email}/lists",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuser"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerServiceAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationListUnderscoreallUnderscorelistsUnderscoreperUnderscoreuser"
    },
    "ListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreidLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreidLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreid": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "ListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreidLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGetListallhistoryperlistid": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /list_all_history_per_list_id",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreid"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerServiceAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationListUnderscoreallUnderscorehistoryUnderscoreperUnderscorelistUnderscoreid"
    },
    "GetUnderscoreuserUnderscorebyUnderscoreemailLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscoreuserUnderscorebyUnderscoreemailLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscoreuserUnderscorebyUnderscoreemail": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscoreuserUnderscorebyUnderscoreemailLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostUsersEmailVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /users/{email}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscoreuserUnderscorebyUnderscoreemail"
              }
            ]
          ]
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": {
          "Ref": "HttpApiAuthorizerServiceAuthorizer"
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscoreuserUnderscorebyUnderscoreemail"
    },
    "FavoritesDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "dev-favorites-favorites-table",
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S"
          },
          {
            "AttributeName": "SK",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "SK",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-favorites-dev-ServerlessDeploymentBucketName"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-favorites-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-favorites-dev-HttpApiUrl"
      }
    },
    "tableName": {
      "Value": "dev-favorites-favorites-table"
    },
    "tableArn": {
      "Value": {
        "Fn::GetAtt": [
          "FavoritesDynamoDBTable",
          "Arn"
        ]
      }
    },
    "usersHttpApiUrl": {
      "Value": "https://8n0hu29ljc.execute-api.us-east-1.amazonaws.com"
    }
  }
}