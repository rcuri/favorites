service: favorites
frameworkVersion: '3.21.0'
plugins:
  - serverless-python-requirements
provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  runtime: python3.8
  lambdaHashingVersion: 20201221  
  httpApi:
    authorizers:
      serviceAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl: ${param:users_authorizer_issuer_url}
        audience: ${param:user_pool_client_arn}
  environment:
    FAVORITES_TABLE_NAME: ${self:custom.FAVORITES_TABLE_NAME}
    USERS_HTTP_API_URL: ${cf:users-dev.HttpApiUrl}
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - 'dynamodb:PutItem'
        - 'dynamodb:Query'
        - 'dynamodb:UpdateItem'
      Resource:
        Fn::GetAtt: [FavoritesDynamoDBTable, Arn]
custom:
  FAVORITES_TABLE_NAME: ${self:provider.stage}-${self:service}-favorites-table
functions:
  sign_up:
    handler: src/functions/sign_up/handler.handler
    events:
      - httpApi:
          path: /users
          method: POST
  create_list:
    handler: src/functions/create_list/handler.handler
    events:
      - httpApi:
          path: /lists
          method: POST
          authorizer: serviceAuthorizer
  update_list_metadata:
    handler: src/functions/update_list_metadata/handler.handler
    events:
      - httpApi:
          path: /lists/{list_id}
          method: PUT
          authorizer: serviceAuthorizer
  update_list_contents:
    handler: src/functions/update_list_contents/handler.handler
    events:
      - httpApi:
          path: /lists/{list_id}
          method: POST
          authorizer: serviceAuthorizer
  get_list_by_list_id:
    handler: src/functions/get_list/handler.handler
    private: true
    events:
      - httpApi:
          path: /lists/{list_id}
          method: GET
          authorizer: serviceAuthorizer
  list_all_lists_per_user:
    handler: src/functions/get_user_lists/handler.handler
    events:
      - httpApi:
          path: /users/{email}/lists
          method: GET  
          authorizer: serviceAuthorizer
  list_all_history_per_list_id:
    handler: src/handlers/list_all_history_per_list_id.handler
    events:
      - httpApi:
          path: /list_all_history_per_list_id
          method: GET
          authorizer: serviceAuthorizer
  get_user_by_email:
    handler: src/handlers/get_user_by_email.handler
    events:
      - httpApi:
          path: /users/{email}
          method: POST    
          authorizer: serviceAuthorizer          
resources:
  Resources:
    FavoritesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.FAVORITES_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1               

  Outputs:
    tableName:
      Value: ${self:custom.FAVORITES_TABLE_NAME}
    tableArn:
      Value:
        Fn::GetAtt: [FavoritesDynamoDBTable, Arn]
    usersHttpApiUrl:
      Value: ${cf:users-dev.HttpApiUrl}